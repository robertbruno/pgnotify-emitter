version: '3.6'

services:

  pgnotify-emitter:
    # depends_on:
    #   - postgresql
    build:
      dockerfile: Dockerfile
      context: .
    environment:
      - "NODE_ENV=development"
      - USE_TEMPLATE=true
      - PGHOST=postgres
      - PGSSLMODE=disabled
      - PGUSER=postgres
      - PGPORT=5432
      - PGDATABASE=postgres
      - PGPASSWORD=postgres
      - RABBITMQ_URI=amqp://rabbit:rabbit@rabbitmq/TEST?heartbeat=30
      - RABBITMQ_EXCHANGE=app
    ports:
     - 9021:9021
    networks:
      - dev
    restart: always

  postgresql:
    image: postgres:16
    ports:
     - 5432:5432
    networks:
     - dev
    environment:
        POSTGRES_DB: postgres
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
    volumes:
      - ./scripts/notify-emitter.sql:/docker-entrypoint-initdb.d/notify-emitter.sql

  emitter:
    image: emitter/server:latest
    environment:
      EMITTER_LICENSE: PfA8IMlAgoebX0VsqD1niGHf0TjUiPIsbTfQFmd9gZhoAyIbELaXkdTnnsZveWeHnpEQIu3DnIuTC_fu99kNAQ:3
    networks:
     - dev

  prometheus:
    image: prom/prometheus
    networks:
      - dev
    ports:
      - 9090:9090
    configs:
      - source: prometheus_config_v1
        target: /etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:latest
    networks:
      - dev
    ports:
      - 3001:3001
    environment:
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_HTTP_PORT=3001
      - GF_SERVER_PROTOCOL=http
    configs:
      - source: grafana_datasources_v1
        target: /etc/grafana/provisioning/datasources/datasources.yml

networks:
  dev:

configs:
  prometheus_config_v1:
    file: ./scripts/prometheus.yml
  grafana_datasources_v1:
    file: ./scripts/grafana-datasources.yml

